name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build static site
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_BASE_PATH: attack-vector
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Next.js app
        run: pnpm build

      - name: Disable Jekyll on GitHub Pages
        run: touch out/.nojekyll

      - name: Organize output for GitHub Pages
        if: env.NEXT_PUBLIC_BASE_PATH != ''
        run: |
          BASE_PATH="${NEXT_PUBLIC_BASE_PATH}"
          TARGET="out/${BASE_PATH}"
          mkdir -p "${TARGET}"
          shopt -s dotglob
          for entry in out/*; do
            name="$(basename "$entry")"
            if [ "$name" = "$BASE_PATH" ] || [ "$name" = "CNAME" ] || [ "$name" = ".nojekyll" ]; then
              continue
            fi
            mv "$entry" "$TARGET/"
          done
          cp "$TARGET/index.html" out/index.html
          if [ -f "$TARGET/404.html" ]; then
            cp "$TARGET/404.html" out/404.html
          fi
          cp out/.nojekyll "$TARGET/.nojekyll"
          shopt -u dotglob

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
